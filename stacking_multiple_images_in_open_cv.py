# -*- coding: utf-8 -*-
"""Stacking Multiple Images in Open Cv.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14Fol8liFO0MC1hGVCT9BkCNDv_cJIxbJ

**Joining Multiple Images in Open CV**
"""

import cv2
import numpy as np

# Read the image
img = cv2.imread('path_to_your_image.jpg')  # Replace with your image path

# Convert the image to grayscale
imgGray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

# Apply Gaussian blur
imgBlur = cv2.GaussianBlur(imgGray, (7, 7), 0)

# Perform Canny edge detection
imgCanny = cv2.Canny(imgBlur, 100, 200)

# Define a kernel for dilation and erosion
kernel = np.ones((5, 5), np.uint8)

# Dilate the edges
imgDilation = cv2.dilate(imgCanny, kernel, iterations=2)

# Erode the dilated edges
imgEroded = cv2.erode(imgDilation, kernel, iterations=2)

# Convert grayscale images to BGR for stacking
imgGray_bgr = cv2.cvtColor(imgGray, cv2.COLOR_GRAY2BGR)
imgBlur_bgr = cv2.cvtColor(imgBlur, cv2.COLOR_GRAY2BGR)
imgCanny_bgr = cv2.cvtColor(imgCanny, cv2.COLOR_GRAY2BGR)
imgDilation_bgr = cv2.cvtColor(imgDilation, cv2.COLOR_GRAY2BGR)
imgEroded_bgr = cv2.cvtColor(imgEroded, cv2.COLOR_GRAY2BGR)

# Stack images horizontally and vertically
hor1 = np.hstack((img, imgGray_bgr, imgBlur_bgr))
hor2 = np.hstack((imgCanny_bgr, imgDilation_bgr, imgEroded_bgr))
ver = np.vstack((hor1, hor2))

# Display the stacked images
cv2.imshow('Stacked Images', ver)

cv2.waitKey(0)
cv2.destroyAllWindows()